import datetime
from telethon import events
from telethon.errors.rpcerrorlist import YouBlockedUserError
from telethon.tl.functions.account import UpdateNotifySettingsRequest
from uniborg.util import admin_cmd
#–ß—Ç–æ —Ç—ã —Ç—É—Ç –∑–∞–±—ã–ª?
@borg.on(admin_cmd("wb ?(.*)"))
async def _(event):
    if event.fwd_from:
        return 
    if not event.reply_to_msg_id:
       await event.edit("```–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è```")
       return
    reply_message = await event.get_reply_message() 
    if not reply_message.text:
       await event.edit("```–≠–º–º–º, –∞ –Ω–∞ —Ñ–æ—Ç–æ —Ç—ã –æ—Ç–≤–µ—á–∞—Ç—å –Ω–µ –ø—Ä–æ–±–æ–≤–∞–ª(–∞)?```")
       return
    chat = "@photocolorizerbot"
    sender = reply_message.sender
    if reply_message.sender.bot:
       await event.edit("```–û—Ç–≤–µ—Ç—å  —Å–æ–æ–±—â–µ–Ω–∏–µ –†–ï–ê–õ–¨–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø —Å —Ñ–æ—Ç–æ```")
       return
    await event.edit("```–í –ø—Ä–æ—Ü–µ—Å—Å–µ```")
    async with borg.conversation(chat) as conv:
          try:     
              response = conv.wait_event(events.NewMessage(incoming=True,from_users=1072675522))
              await borg.forward_messages(chat, reply_message)
              response = await response 
          except YouBlockedUserError: 
              await event.reply("```–ó–∞–ø—É—Å—Ç–∏—Ç–µ @photocolorizerbot –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞```")
              return
          if response.text.startswith("üòä"):
             await event.edit("```–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –û–¢–ö–õ–Æ–ß–ò–¢–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏.```")
          else: 
             await borg.forward_messages(event.chat_id, response.message)
